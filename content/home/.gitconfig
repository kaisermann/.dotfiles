[user]
  name = "Christian Kaisermann"
  email = "christian@kaisermann.me"

[github]
  user = "kaisermann"

[core]
  excludesfile = ~/.gitignore.global
  editor = vim
  filemode = false
  trustctime = false
  autocrlf = input
  ignorecase = false

[alias]
  st = status
  sts = status -sb
  stl = ls-files -m -o --exclude-standard
  ci = commit
  br = branch
  co = checkout
  cr = clone --recursive
  df = diff --word-diff
  dfc = diff --word-diff --cached
  l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  ll = log --pretty=oneline --graph --abbrev-commit
  lls = log --pretty=oneline --graph --abbrev-commit --stat
  g = grep --break --heading --line-number
  amend = commit --amend --reuse-message=HEAD
  contrib = shortlog --summary --numbered
  show-ignored = "! git clean -ndX | perl -pe 's/Would remove/Ignored:/'"
  br = for-each-ref --sort=-committerdate refs/heads/ refs/remotes/origin/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' -
  foda-se = reset --hard HEAD
  fml = !git fetch origin && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)
  changelog = log --oneline --abbrev-commit --no-merges
	graph = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(yellow)%h%C(reset) %s%C(reset) %C(dim white)<%an>%C(reset) %C(bold blue)%ar%C(reset)%C(bold yellow)%d%C(reset)'
	unstage = reset HEAD --
	uncommit = reset --soft HEAD~
	rc = rebase --continue
	rs = rebase --skip
	ra = rebase --abort
	sync = !git tag -l | xargs git tag -d && git fetch -t
	preparepr = "!f() { BRANCH=$(git rev-parse --abbrev-ref HEAD);git checkout master; git fetch && git rebase; git checkout \"$BRANCH\";git rebase master; }; f"
	updatepr = "!f() { BRANCH=$(git rev-parse --abbrev-ref HEAD);git push --set-upstream origin -f \"$BRANCH\":\"$BRANCH\";}; f"
	openpr = "!f() { ORG=$(git remote get-url origin | cut -d ":" -f2 | cut -d "/" -f1);BRANCH=$(git rev-parse --abbrev-ref HEAD); REPO=$(git ls-remote --get-url |cut -d / -f2) ;git push --set-upstream origin -f \"$BRANCH\":\"$BRANCH\"; echo -e \"https://github.com/$ORG/$REPO/compare/$BRANCH?expand=1\";}; f"

[pager]
	diff = diff-so-fancy | less --tabs=2 -RFX
	show = diff-so-fancy | less --tabs=2 -RFX

[color]
  ui = true

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[color "diff-highlight"]
  oldNormal = "red bold"
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"

# [credential]
#   helper = osxkeychain

[grep]
  lineNumber = true

[help]
  autocorrect = 1

[difftool]
  prompt = false

[mergetool]
  prompt = false

[push]
  default = simple
  followTags = true

[pull]
	rebase = true

[fetch]
  prune = true

[diff]
  renames = copies
  tool = Kaleidoscope

[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =

[url "git@github.com:vtex-apps/"]
    insteadOf = va:
[url "git@github.com:vtex/"]
    insteadOf = v:
